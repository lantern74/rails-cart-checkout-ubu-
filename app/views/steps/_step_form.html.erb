<style>
.choices__list--dropdown {
    text-align: left;
}
.choices__inner{
    background-color:white;
}

label{
  color:#555;
  font-weight:100;
  margin:0;
  margin-bottom:3px;
  padding:0;
  font-size:14px;
}

input::placeholder {
  color:#999 !important;
}

</style>

<%= form_with(model: @step, url: update_settings_only_step_path(encrypt_for_hidden_field(@step.id)), class: 'needs-validation',  id: 'edit_settings_popup', data: { remote: true },   html: {onsubmit: "remote(event)"} ) do |form| %>

        <div class="form-group py-2">
              <%= form.label "Name for Page" %>
              <%= form.text_field :title, class: "form-control", placeholder: "Name for Page" %>
         </div>

        <div class="form-group py-2">
              <%= form.label :step_path %>
              <%= form.text_field :step_path, class: "form-control", placeholder: "Step Path" %>
         </div>


   <div class="form-group">
    <%#= form.label :step_type_id %>
    <%#= form.select :step_type_id, options_for_select(@step_types.map { |type| [type.name, type.id] }), {}, {  class: 'form-select js-choice' } %>
  </div>

<br>
<br>

  <!-- Add other step form fields as needed -->
  <div class="form-group">
    <%= form.submit 'Edit Step', class: 'btn btn-primary' %>
  </div>
<% end %>

<script>

document.addEventListener('DOMContentLoaded', function () {
    var selectElement = document.querySelector('.js-choice');

    var choices1 = new window.choices(selectElement, {
        delimiter: ',',
        editItems: true,
        maxItems: 5,
        removeButton: true,
    });
});
</script>


<script>
function remote(event) {
  event.preventDefault();
  const form = event.target;
  fetch(form.action, {
    headers: { Accept: "application/json" },
    method: form.method,
    body: new FormData(form),
  })
    .then((response) => response.text())
    .then((text) => {
      document.querySelector("#remote_response").innerHTML = text;
    });
   $(".popup-settings-edit-funnel").magnificPopup("close");
}

</script>

